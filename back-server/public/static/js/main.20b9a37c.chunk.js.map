{"version":3,"sources":["components/home/Home.jsx","components/authentification/auth-service.js","components/authentification/Signup.jsx","components/authentification/Login.jsx","components/profile/Profile.jsx","components/map/Mapbirds.jsx","App.js","serviceWorker.js","index.js"],"names":["home","react_default","a","createElement","Link","to","AuthService","_this","this","Object","classCallCheck","signup","username","password","service","post","then","response","data","login","loggedin","get","logout","axios","create","baseURL","withCredentials","Signup","props","possibleConstructorReturn","getPrototypeOf","call","handleFormSubmit","event","preventDefault","state","setState","getUser","catch","error","console","log","handleChange","_event$target","target","name","value","defineProperty","_this2","onSubmit","type","onChange","e","Component","Login","Profile","logoutUser","loggedInUser","handleFileUpload","files","uploadData","FormData","append","handleUpload","imageUrl","secure_url","err","objectSpread","userInSession","nextProps","onClick","Mapbirds","App","getTheUser","userObj","_this3","fetchUser","className","Switch","Route","exact","path","component","Home","render","profile_Profile","Redirect","authentification_Signup","authentification_Login","Boolean","window","location","hostname","match","ReactDOM","BrowserRouter","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.20b9a37c.chunk.js","sourcesContent":["import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nconst home = () => {\n  return (\n    <div>\n      <h2>This is Home</h2>\n      <Link to=\"/login\">Log-in</Link>\n      <Link to=\"/signup\">Sign-up</Link>\n      <Link to=\"/profile\">Profile</Link>\n      <Link to=\"/mapbirds\">map birds</Link>\n    </div>\n  );\n};\n\nexport default home;\n","import axios from \"axios\";\n\nclass AuthService {\n  constructor() {\n    let service = axios.create({\n      baseURL: \"http://localhost:5000/auth\",\n      withCredentials: true\n    });\n    this.service = service;\n  }\n  \n  signup = (username, password) => {\n    return this.service\n      .post(\"/signup\", { username, password })\n      .then(response => response.data);\n  };\n\n  login = (username, password) => {\n    return this.service.post('/login', {username, password})\n    .then(response => response.data)\n  }\n\n  loggedin = () => {\n    return this.service.get('/loggedin')\n    .then(response => response.data)\n  }\n  \n  logout = () => {\n    return this.service.post('/logout', {})\n    .then(response => response.data)\n  }\n}\n\nexport default AuthService;\n","import React, { Component } from \"react\";\nimport AuthService from \"./auth-service\";\nimport { Link } from \"react-router-dom\";\n\nclass Signup extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { username: \"\", password: \"\" };\n    this.service = new AuthService();\n  }\n\n  handleFormSubmit = event => {\n    event.preventDefault();\n    const username = this.state.username;\n    const password = this.state.password;\n\n    this.service\n      .signup(username, password)\n      .then(response => {\n        this.setState({\n          username: \"\",\n          password: \"\"\n        });\n        this.props.getUser(response) /* holt User-Daten aus dem Back und schickt sie nach App.js */\n      })\n      .catch(error => console.log(error));\n  };\n\n  handleChange = event => {\n    const { name, value } = event.target;\n    this.setState({ [name]: value });\n  };\n\n  render() {\n    return (\n      <div>\n        <div>\n          <h2>This is sign-up</h2>\n          <Link to=\"/\">Home</Link>\n\n        </div>\n        <div>\n          <form onSubmit={this.handleFormSubmit}>\n            <label>Username:</label>\n            <input\n              type=\"text\"\n              name=\"username\"\n              value={this.state.username}\n              onChange={e => this.handleChange(e)}\n            />\n\n            <label>Password:</label>\n            <input\n              type=\"password\"\n              name=\"password\"\n              value={this.state.password}\n              onChange={e => this.handleChange(e)}\n            />\n\n            <input type=\"submit\" value=\"Signup\" />\n          </form>\n\n          <p>\n            Already have account?\n            <Link to=\"/login\"> Login</Link>\n          </p>\n        </div>\n      </div>\n    );\n  }\n}\nexport default Signup;\n","import React, { Component } from \"react\";\nimport AuthService from \"./auth-service\";\nimport { Link } from \"react-router-dom\";\n\nclass Login extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { username: \"\", password: \"\" };\n    this.service = new AuthService();\n  }\n\n  handleFormSubmit = event => {\n    event.preventDefault();\n    const username = this.state.username;\n    const password = this.state.password;\n    this.service\n      .login(username, password)\n      .then(response => {\n        this.setState({ username: \"\", password: \"\" });\n        this.props.getUser(response);\n      })\n      .catch(error => console.log(error));\n  };\n\n  handleChange = event => {\n    const { name, value } = event.target;\n    this.setState({ [name]: value });\n  };\n\n  render() {\n    return (\n      <div>\n        <h2>This is Login</h2>\n        <Link to=\"/\">Home</Link>\n        <form onSubmit={this.handleFormSubmit}>\n          <label>Username:</label>\n          <input\n            type=\"text\"\n            name=\"username\"\n            value={this.state.username}\n            onChange={e => this.handleChange(e)}\n          />\n          <label>Password:</label>\n          <input\n            type=\"password\"\n            name=\"password\"\n            value={this.state.password}\n            onChange={e => this.handleChange(e)}\n          />\n\n          <input type=\"submit\" value=\"Login\" />\n        </form>\n        <p>\n          Don't have account?\n          <Link to={\"/signup\"}> Signup</Link>\n        </p>\n      </div>\n    );\n  }\n}\n\nexport default Login;","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport AuthService from \"../authentification/auth-service\";\n\nclass Profile extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { loggedInUser: null };\n    this.service = new AuthService();\n  }\n\n  componentDidMount() {\n    this.setState({ ...this.state, loggedInUser: this.props.userInSession });\n  }\n\n  componentWillReceiveProps(nextProps) {\n    this.setState({ ...this.state, loggedInUser: nextProps[\"userInSession\"] });\n  }\n\n  logoutUser = () => {\n    this.service.logout().then(() => {\n      this.setState({ loggedInUser: null });\n      this.props.getUser(null);\n    });\n  };\n\n  handleFileUpload = e => {\n    console.log(\"The file to be uploaded is: \", e.target.files[0]);\n\n    const uploadData = new FormData();\n\n    uploadData.append(\"imageUrl\", e.target.files[0]);\n    this.service\n      .handleUpload(uploadData)\n      .then(response => {\n        // console.log('response is: ', response);\n        // after the console.log we can see that response carries 'secure_url' which we can use to update the state\n        this.setState({ imageUrl: response.secure_url });\n      })\n      .catch(err => {\n        console.log(\"Error while uploading the file: \", err);\n      });\n  };\n\n  render() {\n    if (this.state.loggedInUser) {\n      return (\n        <div>\n          <h2>Welcome, {this.state.loggedInUser.username}!</h2>\n          <Link to=\"/\">Home</Link>\n          <Link to=\"/\">\n            <button onClick={() => this.logoutUser()}>Logout</button>\n          </Link>\n        </div>\n      );\n    } else {\n      return (\n        <div>\n          <h2>Oh sorry, you are not logged in!</h2>\n          <Link to=\"/\">Home</Link>\n          <Link to=\"/login\">Log-in</Link>\n          <Link to=\"/signup\">Signup</Link>\n        </div>\n      );\n    }\n  }\n}\n\nexport default Profile;\n","import React, { Component } from 'react'\nimport { Link } from \"react-router-dom\";\n\nexport default class Mapbirds extends Component {\n  render() {\n    return (\n      <div>\n        <h2>This is Map Birds</h2>\n        <Link to=\"/\">Home</Link>\n      </div>\n    )\n  }\n}\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport Home from \"./components/home/Home\";\nimport { Switch, Route, Redirect } from \"react-router-dom\";\nimport Signup from \"./components/authentification/Signup\";\nimport Login from \"./components/authentification/Login\";\nimport Profile from \"./components/profile/Profile\";\nimport AuthService from \"./components/authentification/auth-service\";\nimport Mapbirds from \"./components/map/Mapbirds\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { loggedInUser: null };\n    this.service = new AuthService();\n  }\n\n  fetchUser() {\n    if (this.state.loggedInUser === null) {\n      this.service\n        .loggedin()\n        .then(response => {\n          this.setState({\n            loggedInUser: response\n          });\n        })\n        .catch(err => {\n          this.setState({\n            loggedInUser: false\n          });\n        });\n    }\n  }\n\n  getTheUser = userObj => {\n    this.setState({\n      loggedInUser: userObj\n    });\n  };\n\n  render() {\n    this.fetchUser();\n    if (this.state.loggedInUser) {\n      return (\n        <div className=\"App\">\n          <Switch>\n            <Route exact path=\"/mapbirds\" component={Mapbirds} />\n            <Route exact path=\"/\" component={Home} />\n            <Route\n              exact\n              path=\"/profile\"\n              render={() => (\n                <Profile\n                  getUser={this.getTheUser}\n                  userInSession={this.state.loggedInUser}\n                />\n              )}\n            />\n            <Route\n              exact\n              path=\"/login\"\n              render={() => <Redirect to=\"/profile\" />}\n            />\n            <Route\n              exact\n              path=\"/signup\"\n              render={() => <Redirect to=\"/profile\" />}\n            />\n          </Switch>\n        </div>\n      );\n    } else {\n      return (\n        <div className=\"App\">\n          <Switch>\n            <Route exact path=\"/mapbirds\" component={Mapbirds} />\n            <Route exact path=\"/\" component={Home} />\n            <Route\n              exact\n              path=\"/signup\"\n              render={() => <Signup getUser={this.getTheUser} />}\n            />\n            <Route\n              exact\n              path=\"/login\"\n              render={() => <Login getUser={this.getTheUser} />}\n            />\n            <Route\n              exact\n              path=\"/profile\"\n              render={() => (\n                <Profile\n                  getUser={this.getTheUser}\n                  userInSession={this.state.loggedInUser}\n                />\n              )}\n            />\n          </Switch>\n        </div>\n      );\n    }\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\n\nReactDOM.render(\n  <Router>\n    <App />\n  </Router>,\n  document.getElementById(\"root\")\n);\nserviceWorker.unregister();\n"],"sourceRoot":""}