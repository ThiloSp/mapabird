{"version":3,"sources":["components/home/Home.jsx","components/authentification/auth-service.js","components/authentification/Signup.jsx","components/authentification/Login.jsx","components/profile/profile-service.js","components/profile/addProfilePic.jsx","components/forum/forum-service.js","components/forum/ThreadListPersonal.jsx","components/profile/Profile.jsx","components/map/map-service.js","components/map/SearchForm.jsx","components/map/SearchForm2.jsx","components/map/Mapcontainer.jsx","components/map/MapForThreads.jsx","components/map/Mapbirds.jsx","components/navbar/Navbar.jsx","components/forum/ThreadForm.jsx","components/forum/ThreadListAll.jsx","components/forum/CommentForm.jsx","components/forum/UserInfo.jsx","components/forum/CommentDetail.jsx","components/forum/ThreadDetails.jsx","App.js","serviceWorker.js","index.js"],"names":["home","react_default","a","createElement","className","Link","style","textDecoration","color","to","src","alt","AuthService","_this","this","Object","classCallCheck","signup","username","password","service","post","then","response","data","login","loggedin","get","logout","axios","create","baseURL","concat","process","withCredentials","Signup","props","possibleConstructorReturn","getPrototypeOf","call","handleFormSubmit","event","preventDefault","state","setState","getUser","catch","error","console","log","handleChange","_event$target","target","name","value","defineProperty","_this2","onSubmit","type","onChange","e","Component","Login","ProfileService","updatePhotoProfile","userID","put","res","theFile","AddProfilePic","loggedInUser","profileService","objectSpread","userInSession","nextProps","ForumService","getAllThreads","responseDB","getPersonalThreads","userId","addNewThread","title","content","creatorId","searchName","getThreadDetails","params","id","addNewComment","threadId","getCommentDetail","commentId","getUserInfo","ThreadListPersonal","getList","_id","threads","listOfThreads","map","thread","key","Profile","handleFileUpload","files","uploadData","FormData","append","handleUpload","photoPath","secure_url","err","addProfilePic_AddProfilePic","ThreadListPersonal_ThreadListPersonal","MapService","addNewSearch","species","month","year","search","getBirdsFromBack","getBirdNames","SearchForm","componentDidMount","birdnames","birdArray","i","label","passFunction","Autocomplete_default","items","shouldItemRender","item","toLowerCase","indexOf","getItemValue","renderItem","highlighted","backgroundColor","onSelect","SearchForm2","MapContainer","_Component","apply","arguments","inherits","createClass","markers","allBirdPointsProps","point","idx","image","url","scaledSize","google","maps","Size","dist","position","icon","width","height","zoom","initialCenter","lat","lng","GoogleApiWrapper","apiKey","GMAPS_KEY","MapForThreads","getThreadBirds","allBirdPoints","Mapcontainer","Mapbirds","handlerFunction","dataFromForm","newState","SearchForm_SearchForm","SearchForm2_SearchForm2","sciName","undefined","MapForThreads_MapForThreads","Navbar","logoutUser","onClick","ThreadForm","ThreadListAll","CommentForm","theThread","getTheThread","isShowing","toggleForm","showAddCommentForm","UserInfo","creator","responseFromApi","CommentDetail","getTheComment","UserInfo_UserInfo","ThreadDetails","getSingleThread","match","renderAddCommentForm","CommentForm_CommentForm","comments","length","comment","index","CommentDetail_CommentDetail","App","getTheUser","userObj","_this3","fetchUser","components_navbar_Navbar","Switch","Route","exact","path","component","render","_ref","ThreadDetails_ThreadDetails","Home","profile_Profile","ThreadForm_ThreadForm","Redirect","components_authentification_Login","authentification_Signup","Boolean","window","location","hostname","ReactDOM","BrowserRouter","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.bef49875.chunk.js","sourcesContent":["import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport \"./Home.scss\";\n\nconst home = () => {\n  return (\n    <div>\n      <h2 className=\"title\">map A bird</h2>\n      <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"col\">\n            <Link style={{ textDecoration: \"none\", color: \"#F1F1F1\" }} to=\"/mapbirds\">\n              <div className=\"card cardheight\" /* style=\"width: 18rem;\" */>\n                <img src=\"/images/mapBirds.png\" className=\"card-img-top cardImg\" alt=\"...\" />\n                <div className=\"card-body cardText\">\n                  <p className=\"card-text\">Map Birds</p>\n                </div>\n              </div>\n            </Link>\n          </div>\n          <div className=\"col\">\n            <Link style={{ textDecoration: \"none\", color: \"#F1F1F1\" }} to=\"/threads\">\n              <div className=\"card cardheight\" /* style=\"width: 18rem;\" */>\n                <img src=\"/images/forum.png\" className=\"card-img-top cardImg\" alt=\"...\" />\n                <div className=\"card-body cardText\">\n                  <p className=\"card-text\">Forum</p>\n                </div>\n              </div>\n            </Link>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default home;\n","import axios from \"axios\";\n\nclass AuthService {\n  constructor() {\n    let service = axios.create({\n      baseURL: `${process.env.REACT_APP_API_URL}/auth`,\n      withCredentials: true\n    });\n    this.service = service;\n  }\n  \n  signup = (username, password) => {\n    return this.service\n      .post(\"/signup\", { username, password })\n      .then(response => response.data);\n  };\n\n  login = (username, password) => {\n    return this.service.post('/login', {username, password})\n    .then(response => response.data)\n  }\n\n  loggedin = () => {\n    return this.service.get('/loggedin')\n    .then(response => response.data)\n  }\n  \n  logout = () => {\n    return this.service.post('/logout', {})\n    .then(response => response.data)\n  }\n}\n\nexport default AuthService;\n","import React, { Component } from \"react\";\nimport AuthService from \"./auth-service\";\nimport { Link } from \"react-router-dom\";\n\nclass Signup extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { username: \"\", password: \"\" };\n    this.service = new AuthService();\n  }\n\n  handleFormSubmit = event => {\n    event.preventDefault();\n    const username = this.state.username;\n    const password = this.state.password;\n\n    this.service\n      .signup(username, password)\n      .then(response => {\n        this.setState({\n          username: \"\",\n          password: \"\"\n        });\n        this.props.getUser(\n          response\n        ); /* holt User-Daten aus dem Back und schickt sie nach App.js */\n      })\n      .catch(error => console.log(error));\n  };\n\n  handleChange = event => {\n    const { name, value } = event.target;\n    this.setState({ [name]: value });\n  };\n\n  render() {\n    return (\n      <div className=\"formBoxCenterParent\">\n        <div className=\"formBoxCenter\">\n          <h2>Sign-up</h2>\n          <div>\n            <form onSubmit={this.handleFormSubmit}>\n              <div className=\"form-group\">\n                <label>Username:</label>\n                <input\n                  className=\"form-control\"\n                  type=\"text\"\n                  name=\"username\"\n                  value={this.state.username}\n                  onChange={e => this.handleChange(e)}\n                />\n              </div>\n              <div className=\"form-group\">\n                <label>Password:</label>\n                <input\n                  className=\"form-control\"\n                  type=\"password\"\n                  name=\"password\"\n                  value={this.state.password}\n                  onChange={e => this.handleChange(e)}\n                />\n              </div>\n              <input className=\"linkButton\" type=\"submit\" value=\"Signup\" />\n            </form>\n\n            <p>Already have account?</p>\n            <div>\n              <Link className=\"linkButton\" to=\"/login\">\n                {\" \"}\n                Login\n              </Link>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\nexport default Signup;\n","import React, { Component } from \"react\";\nimport AuthService from \"./auth-service\";\nimport { Link } from \"react-router-dom\";\nimport \"./Login.scss\";\n\nclass Login extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { username: \"\", password: \"\" };\n    this.service = new AuthService();\n  }\n\n  handleFormSubmit = event => {\n    event.preventDefault();\n    const username = this.state.username;\n    const password = this.state.password;\n    this.service\n      .login(username, password)\n      .then(response => {\n        this.setState({ username: \"\", password: \"\" });\n        this.props.getUser(response);\n      })\n      .catch(error => console.log(error));\n  };\n\n  handleChange = event => {\n    const { name, value } = event.target;\n    this.setState({ [name]: value });\n  };\n\n  render() {\n    return (\n      <div className=\"formBoxCenterParent\">\n        <div className=\"formBoxCenter\">\n          <h2>Login</h2>\n          <form onSubmit={this.handleFormSubmit}>\n            <div className=\"form-group\">\n              <label>Username:</label>\n              <input\n                className=\"form-control\"\n                type=\"text\"\n                name=\"username\"\n                value={this.state.username}\n                onChange={e => this.handleChange(e)}\n              />\n            </div>\n            <div className=\"form-group\">\n              <label>Password:</label>\n              <input\n                className=\"form-control\"\n                type=\"password\"\n                name=\"password\"\n                value={this.state.password}\n                onChange={e => this.handleChange(e)}\n              />\n            </div>\n\n            <input className=\"linkButton\" type=\"submit\" value=\"Login\" />\n          </form>\n          <p>Don't have account?</p>\n          <div>\n            <Link className=\"linkButton\" to={\"/signup\"}>\n              {\" \"}\n              Signup\n            </Link>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Login;\n","import axios from \"axios\";\n\nclass ProfileService {\n  constructor() {\n    let service = axios.create({\n      baseURL: `${process.env.REACT_APP_API_URL}/uploads`,\n      withCredentials: true\n    });\n    this.service = service;\n  }\n\n  handleUpload(theFile) {\n    console.log(\"file in service: \", theFile);\n    return this.service.post(\"/upload\", theFile) \n    .then(res => res.data);\n  }\n\n  updatePhotoProfile = (response, userID) => {\n    console.log(\"this is photo: \",response, userID)\n    return this.service.put(\"/update\", { response, userID })\n    .then(res => res.data)\n  }\n}\n\nexport default ProfileService;\n","import React, { Component } from \"react\";\nimport ProfileService from \"./profile-service\";\n\nexport default class AddProfilePic extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { loggedInUser: null };\n    this.profileService = new ProfileService();\n  }\n\n  componentDidMount() {\n    this.setState({ ...this.state, loggedInUser: this.props.userInSession });\n  }\n\n  componentWillReceiveProps(nextProps) {\n    this.setState({ ...this.state, loggedInUser: nextProps[\"userInSession\"] });\n  }\n\n  render() {\n    return (\n      <div>\n        <form>\n          <label>Change your profile picture</label>\n          <input type=\"file\" onChange={e => this.props.handleChange(e)} />\n        </form>\n      </div>\n    );\n  }\n}\n","import axios from \"axios\";\n\nclass ForumService {\n  constructor() {\n    let service = axios.create({\n      baseURL: `${process.env.REACT_APP_API_URL}/forum`,\n      withCredentials: true\n    });\n    this.service = service;\n  }\n\n  getAllThreads = () => {\n    return this.service.get(\"/threads\").then(responseDB => responseDB.data);\n  };\n\n  getPersonalThreads = userId => {\n    return this.service\n      .post(\"/personalthreads\", { userId })\n      .then(responseDB => responseDB.data);\n  };\n\n  addNewThread = (title, content, creatorId, searchName) => {\n    return this.service\n      .post(\"/thread/new\", { title, content, creatorId, searchName })\n      .then(response => response.data);\n  };\n\n  getThreadDetails = params => {\n    return this.service\n      .get(`/threads/${params.id}`) //params ok?\n      .then(response => response.data);\n  };\n\n  addNewComment = (title, content, threadId, creatorId) => {\n    return this.service\n      .post(\"/comment/new\", { title, content, threadId, creatorId })\n      .then(response => response.data);\n  };\n\n  getCommentDetail = commentId => {\n    return this.service\n      .post(\"/comment/details\", { commentId })\n      .then(response => {\n        return response.data;\n      });\n  };\n\n  getUserInfo = creatorId => {\n    return this.service\n      .post(\"/comment/userinfo\", { creatorId })\n      .then(response => {\n        return response.data;\n      });\n  };\n}\n\nexport default ForumService;\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport ForumService from \"./forum-service\";\n\nexport default class ThreadListPersonal extends Component {\n  constructor() {\n    super();\n    this.state = { listOfThreads: [] };\n    this.service = new ForumService();\n  }\n\n  getList = () => {\n    const userId = this.props.userInSession._id;\n    console.log(\"this is userId: \", userId);\n    this.service.getPersonalThreads(userId).then(response => {\n      console.log(\"response1 is: \", response)\n      console.log(\"response1 threads is: \", response.threads);\n      this.setState({\n        listOfThreads: response.threads\n      });\n      console.log(this.state.listOfThreads);\n    });\n  };\n\n  componentDidMount() {\n    this.getList();\n  }\n\n  render() {\n    return (\n      <div>\n        <h2>Your Threads:</h2>\n        <div>\n          {this.state.listOfThreads.map(thread => {\n            return (\n              <div key={thread._id}>\n                <Link to={`/threads/${thread._id}`}>\n                  <h3>{thread.title}</h3>\n                </Link>\n              </div>\n            );\n          })}\n        </div>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport AuthService from \"../authentification/auth-service\";\nimport ProfileService from \"./profile-service\";\nimport AddProfilePic from \"./addProfilePic\";\nimport ThreadListPersonal from \"../forum/ThreadListPersonal\";\n\nclass Profile extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { loggedInUser: null };\n    this.service = new AuthService();\n    this.profileService = new ProfileService();\n  }\n\n  componentDidMount() {\n    this.setState({ ...this.state, loggedInUser: this.props.userInSession });\n  }\n\n  componentWillReceiveProps(nextProps) {\n    this.setState({ ...this.state, loggedInUser: nextProps[\"userInSession\"] });\n  }\n\n  handleFileUpload = e => {\n    console.log(\"The file to be uploaded is: \", e.target.files[0]);\n    console.log(\"user ID: \", this.state.loggedInUser._id);\n    const userID = this.state.loggedInUser._id;\n    const uploadData = new FormData();\n    uploadData.append(\"photoPath\", e.target.files[0]);\n    this.profileService\n      .handleUpload(uploadData)\n      .then(response => {\n        console.log(\"response is: \", response);\n        this.setState({\n          ...this.state,\n          loggedInUser: { photoPath: response.secure_url } \n        });\n        console.log(this.state);\n        this.profileService\n          .updatePhotoProfile(response, userID)\n          .then(response => {\n            console.log(response);\n          });\n      })\n      .catch(err => {\n        console.log(\"Error while uploading the file: \", err);\n      });\n  };\n\n  render() {\n    if (this.state.loggedInUser) {\n      return (\n        <div>\n          <h2>Welcome, {this.state.loggedInUser.username}!</h2>\n          <img src={this.state.loggedInUser.photoPath} alt=\"\" />\n          <AddProfilePic\n            userInSession={this.state.loggedInUser}\n            handleChange={this.handleFileUpload}\n          />\n          <ThreadListPersonal userInSession={this.state.loggedInUser}/>\n          <Link to=\"/threadform\">New Thread</Link>\n        </div>\n      );\n    } else {\n      return (\n        <div>\n          <h2>Oh sorry, you are not logged in!</h2>\n          <div>\n            <Link to=\"/login\">Log-in</Link>\n          </div>\n        </div>\n      );\n    }\n  }\n}\n\nexport default Profile;\n","import axios from \"axios\";\n\nclass MapService {\n  constructor() {\n    let service = axios.create({\n      baseURL: `${process.env.REACT_APP_API_URL}/birds`,\n      withCredentials: true\n    });\n    this.service = service;\n  }\n\n  // getAllThreads = () => {\n  //   return this.service.get(\"/threads\").then(responseDB => responseDB.data);\n  // };\n\n  addNewSearch = (searchName, species, month, year, search) => {\n    console.log(\"This is searchname: \", searchName);\n    console.log(\"This is month: \", month);\n    console.log(\"This is year: \", year);\n    return this.service\n      .post(\"/\", { searchName, species, month, year, search })\n      .then(response => response.data);\n  };\n\n  getBirdsFromBack = searchName => {\n    return this.service\n      .post(\"/threadbirds\", { searchName })\n      .then(response => response);\n  };\n\n  getBirdNames = () => {\n    return this.service.get(\"/birdnames\").then(response => response.data);\n  };\n}\nexport default MapService;\n","import React, { Component } from \"react\";\nimport MapService from \"./map-service\";\nimport ReactAutocomplete from \"react-autocomplete\";\nimport \"./SearchForm.scss\";\n\nexport default class SearchForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      searchName: \"\",\n      species: \"\",\n      month: \"\",\n      year: \"\",\n      search: \"\",\n      birdnames: []\n    };\n    this.service = new MapService();\n  }\n  componentDidMount = () => {\n    this.service.getBirdNames().then(birdnames => {\n      const birdArray = birdnames.map((e, i) => {\n        return { id: i, label: e };\n      });\n      this.setState({ ...this.state, birdnames: birdArray });\n    });\n  };\n\n  handleFormSubmit = event => {\n    // console.log(\"state is now1: \", this.state);\n    event.preventDefault();\n    const searchName = this.state.searchName;\n    const species = this.state.species;\n    const month = this.state.month;\n    const year = this.state.year;\n    const search = \"search1\";\n\n    this.service\n      .addNewSearch(searchName, species, month, year, search)\n      .then(response => {\n        console.log(\"searchresponse is: \", response);\n        this.props.passFunction(response);\n      })\n      .then(() => {\n        this.setState({\n          searchName: \"\",\n          species: \"\",\n          month: \"\",\n          year: \"\",\n          search: \"\",\n          birdnames: []\n        });\n        // console.log(\"state is now2: \", this.state);\n      })\n      .catch(error => console.log(error));\n  };\n\n  handleChange = event => {\n    const { name, value } = event.target;\n    this.setState({ [name]: value });\n  };\n\n  render() {\n    return (\n      <div className=\"searchForm\">\n        <form className=\"form-inline\" onSubmit={this.handleFormSubmit}>\n         \n            <label>Name of your query:</label>\n            <input\n              className=\"form-control\"\n              type=\"text\"\n              name=\"searchName\"\n              value={this.state.searchName}\n              onChange={e => this.handleChange(e)}\n            />\n\n            <label>Bird species:</label>\n            <ReactAutocomplete\n              items={this.state.birdnames}\n              shouldItemRender={(item, value) =>\n                item.label.toLowerCase().indexOf(value.toLowerCase()) > -1\n              }\n              getItemValue={item => item.label}\n              renderItem={(item, highlighted) => (\n                <div\n                  key={item.id}\n                  style={{\n                    backgroundColor: highlighted ? \"#eee\" : \"transparent\"\n                  }}\n                >\n                  {item.label}\n                </div>\n              )}\n              value={this.state.species}\n              onChange={e => this.setState({ species: e.target.value })}\n              onSelect={species => this.setState({ species })}\n            />\n\n            <label>Month:</label>\n            <select\n              className=\"custom-select\"\n              name=\"month\"\n              value={this.state.month}\n              onChange={e => this.handleChange(e)}\n            >\n              <option value=\"00\">select</option>\n              <option value=\"01\">January</option>\n              <option value=\"02\">February</option>\n              <option value=\"03\">March</option>\n              <option value=\"04\">April</option>\n              <option value=\"05\">May</option>\n              <option value=\"06\">June</option>\n              <option value=\"07\">July</option>\n              <option value=\"08\">August</option>\n              <option value=\"09\">September</option>\n              <option value=\"10\">October</option>\n              <option value=\"11\">November</option>\n              <option value=\"12\">December</option>\n            </select>\n\n            <label>Year:</label>\n            <select\n              className=\"custom-select\"\n              name=\"year\"\n              value={this.state.year}\n              onChange={e => this.handleChange(e)}\n            >\n              <option value=\"1994\">select</option>\n              <option value=\"1995\">1995</option>\n              <option value=\"1996\">1996</option>\n              <option value=\"1997\">1997</option>\n              <option value=\"1998\">1998</option>\n              <option value=\"1999\">1999</option>\n              <option value=\"2000\">2000</option>\n              <option value=\"2001\">2001</option>\n              <option value=\"2002\">2002</option>\n              <option value=\"2003\">2003</option>\n              <option value=\"2004\">2004</option>\n              <option value=\"2005\">2005</option>\n              <option value=\"2006\">2006</option>\n              <option value=\"2007\">2007</option>\n              <option value=\"2008\">2008</option>\n              <option value=\"2009\">2009</option>\n              <option value=\"2010\">2010</option>\n              <option value=\"2011\">2011</option>\n              <option value=\"2012\">2012</option>\n              <option value=\"2013\">2013</option>\n              <option value=\"2014\">2014</option>\n              <option value=\"2015\">2015</option>\n              <option value=\"2016\">2016</option>\n              <option value=\"2017\">2017</option>\n              <option value=\"2018\">2018</option>\n            </select>\n\n            <input className=\"linkButton\" type=\"submit\" value=\"submit\" />\n        \n        </form>\n      </div>\n    );\n  }\n}\n\n{\n  /* <label>Bird species:</label>\n            <input\n              type=\"text\"\n              name=\"species\"\n              value={this.state.species}\n              onChange={e => this.handleChange(e)}\n            /> */\n}\n\n{\n  /* <label>Month:</label>\n            <input\n              type=\"text\"\n              name=\"month\"\n              value={this.state.month}\n              onChange={e => this.handleChange(e)}\n            />  */\n}\n\n{\n  /* <label>Year:</label>\n            <input\n              type=\"text\"\n              name=\"year\"\n              value={this.state.year}\n              onChange={e => this.handleChange(e)}\n            /> */\n}\n\n{\n  /* <label>Month:</label>\n            <select\n              name=\"month\"\n              value={this.state.month}\n              onChange={e => this.handleChange(e)}\n            >\n              <option value=\"January\">January</option>\n              <option value=\"February\">February</option>\n              <option value=\"March\">March</option>\n              <option value=\"April\">April</option>\n              <option value=\"May\">May</option>\n              <option value=\"June\">June</option>\n              <option value=\"July\">July</option>\n              <option value=\"August\">August</option>\n              <option value=\"September\">September</option>\n              <option value=\"October\">October</option>\n              <option value=\"November\">November</option>\n              <option value=\"December\">JDecember</option>\n            </select> */\n}\n","import React, { Component } from \"react\";\nimport MapService from \"./map-service\";\n\nexport default class SearchForm2 extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      searchName: this.props.searchName,\n      species: this.props.species,\n      month: \"\",\n      year: \"\",\n      search: \"\",\n      birdnames: []\n    };\n    this.service = new MapService();\n  }\n\n  componentDidMount = () => {\n    this.service.getBirdNames().then(birdnames => {\n      const birdArray = birdnames.map((e, i) => {\n        return { id: i, label: e };\n      });\n      this.setState({ ...this.state, birdnames: birdArray });\n    });\n  };\n\n  handleFormSubmit = event => {\n    // console.log(\"state is now1: \", this.state);\n    console.log(this.props.searchName);\n    event.preventDefault();\n    const searchName = this.state.searchName;\n    const species = this.state.species;\n    const month = this.state.month;\n    const year = this.state.year;\n    const search = \"search2\";\n\n    this.service\n      .addNewSearch(searchName, species, month, year, search)\n      .then(response => {\n        // console.log(\"searchresponse is: \", response);\n        this.props.passFunction(response);\n      })\n      .then(() => {\n        this.setState({\n          searchName: \"\",\n          species: \"\",\n          month: \"\",\n          year: \"\",\n          search: \"\",\n          birdnames: []\n        });\n        console.log(\"state is now2: \", this.state);\n      })\n      .catch(error => console.log(error));\n  };\n\n  handleChange = event => {\n    const { name, value } = event.target;\n    this.setState({ [name]: value });\n  };\n\n  render() {\n    return (\n      <div className=\"searchForm\">\n        <form className=\"form-inline\" onSubmit={this.handleFormSubmit}>\n          {/*    <label>Bird species:</label>\n            <ReactAutocomplete\n              items={this.state.birdnames}\n              shouldItemRender={(item, value) =>\n                item.label.toLowerCase().indexOf(value.toLowerCase()) > -1\n              }\n              getItemValue={item => item.label}\n              renderItem={(item, highlighted) => (\n                <div\n                  key={item.id}\n                  style={{\n                    backgroundColor: highlighted ? \"#eee\" : \"transparent\"\n                  }}\n                >\n                  {item.label}\n                </div>\n              )}\n              value={this.state.species}\n              onChange={e => this.setState({ species: e.target.value })}\n              onSelect={species => this.setState({ species })}\n            /> */}\n\n          <label>Month to compare:</label>\n          <select\n            className=\"custom-select\"\n            name=\"month\"\n            value={this.state.month}\n            onChange={e => this.handleChange(e)}\n          >\n            <option value=\"00\">select</option>\n            <option value=\"01\">January</option>\n            <option value=\"02\">February</option>\n            <option value=\"03\">March</option>\n            <option value=\"04\">April</option>\n            <option value=\"05\">May</option>\n            <option value=\"06\">June</option>\n            <option value=\"07\">July</option>\n            <option value=\"08\">August</option>\n            <option value=\"09\">September</option>\n            <option value=\"10\">October</option>\n            <option value=\"11\">November</option>\n            <option value=\"12\">December</option>\n          </select>\n\n          <label>Year to compare:</label>\n          <select\n            className=\"custom-select\"\n            name=\"year\"\n            value={this.state.year}\n            onChange={e => this.handleChange(e)}\n          >\n            <option value=\"1994\">select</option>\n            <option value=\"1995\">1995</option>\n            <option value=\"1996\">1996</option>\n            <option value=\"1997\">1997</option>\n            <option value=\"1998\">1998</option>\n            <option value=\"1999\">1999</option>\n            <option value=\"2000\">2000</option>\n            <option value=\"2001\">2001</option>\n            <option value=\"2002\">2002</option>\n            <option value=\"2003\">2003</option>\n            <option value=\"2004\">2004</option>\n            <option value=\"2005\">2005</option>\n            <option value=\"2006\">2006</option>\n            <option value=\"2007\">2007</option>\n            <option value=\"2008\">2008</option>\n            <option value=\"2009\">2009</option>\n            <option value=\"2010\">2010</option>\n            <option value=\"2011\">2011</option>\n            <option value=\"2012\">2012</option>\n            <option value=\"2013\">2013</option>\n            <option value=\"2014\">2014</option>\n            <option value=\"2015\">2015</option>\n            <option value=\"2016\">2016</option>\n            <option value=\"2017\">2017</option>\n            <option value=\"2018\">2018</option>\n          </select>\n\n          <input className=\"linkButton\" type=\"submit\" value=\"submit\" />\n        </form>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { Map, Marker, GoogleApiWrapper } from \"google-maps-react\";\n\nexport class MapContainer extends Component {\n  render() {\n    const styleMap = {\n      width: \"100%\",\n      height: \"100%\"\n    };\n\n    const markers = this.props.allBirdPointsProps.map((point, idx) => {\n      let image = {};\n      if (point.search === \"search1\") {\n        image = {\n          url: \"/images/dotRed.png\",\n          scaledSize: new this.props.google.maps.Size(30, 30)\n        };\n      } else {\n        image = {\n          url: \"/images/dotDarkBlue.png\",\n          scaledSize: new this.props.google.maps.Size(30, 30)\n        };\n      }\n      return <Marker position={point} key={idx} icon={image} />;\n    });\n\n    return (\n      <Map\n        google={this.props.google}\n        style={styleMap}\n        zoom={5.5}\n        initialCenter={{\n          lat: 40.4893538,\n          lng: -3.6827461\n        }}\n      >\n        {markers}\n        {/* <Marker position={{ lat: 44.05, lng: -3.02 }} /> */}\n      </Map>\n    );\n  }\n}\n\nexport default GoogleApiWrapper({\n    apiKey: process.env.GMAPS_KEY\n})(MapContainer);\n","import React, { Component } from \"react\";\nimport  MapContainer  from \"./Mapcontainer\";\nimport MapService from \"./map-service\";\nimport data from \"../../data.json\";\n\nexport default class MapForThreads extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { allBirdPoints: data };\n    this.service = new MapService();\n  }\n\n  componentWillReceiveProps() {\n    this.getThreadBirds();\n  }\n\n  getThreadBirds = () => {\n    const searchName = this.props.searchName;\n    console.log(\"this is searchName: \", searchName);\n    this.service\n      .getBirdsFromBack(searchName)\n      .then(response => {\n        console.log(\"this is response: \", response.data);\n        this.setState({ allBirdPoints: response.data });\n      })\n      .catch(err => {\n        console.log(err);\n      });\n  };\n\n  componentDidMount() {\n    this.getThreadBirds();\n  }\n\n  render() {\n    return (\n      <div>\n        <MapContainer allBirdPointsProps={this.state.allBirdPoints} />\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport SearchForm from \"./SearchForm\";\nimport SearchForm2 from \"./SearchForm2\";\nimport MapForThreads from \"./MapForThreads\";\nimport \"./Mapbirds.scss\";\n\nexport default class Mapbirds extends Component {\n  //  constructor(props) {\n  //     super(props);\n  //     this.state = { searchName: \"\" };\n  //   }\n\n  //   handlerFunction = dataFromForm => {\n  //     let newState = {\n  //       ...this.state\n  //     };\n  //     newState.allBirdPoints = dataFromForm;\n  //     this.setState(newState);\n  //   };\n\n  constructor(props) {\n    super(props);\n    this.state = { allBirdPoints: [] };\n  }\n\n  handlerFunction = dataFromForm => {\n    let newState = {\n      ...this.state\n    };\n    newState.allBirdPoints = dataFromForm[0];\n    this.setState(newState);\n    console.log(dataFromForm[0].searchName);\n    console.log(\"This is search after search 1:\", this.state.allBirdPoints);\n  };\n  // resetfunction = event => {\n  //   event.preventDefault();\n  //   let newState = { allBirdPoints: [] };\n\n  //   this.setState(newState);\n  // };\n\n  render() {\n    return (\n      <div>\n        <h3 className=\"title\">Map Birds</h3>\n        <SearchForm passFunction={this.handlerFunction} />\n        {this.state.allBirdPoints.searchName ? (\n          <div>\n            <SearchForm2\n              passFunction={this.handlerFunction}\n              searchName={this.state.allBirdPoints.searchName}\n              species={this.state.allBirdPoints.sciName}\n            />\n          </div>\n        ) : (\n          undefined\n        )}\n        {/* {this.state.allBirdPoints.searchName ? (\n          <div>\n            <form onSubmit={this.resetfunction}>\n              <button>new Search</button>/>\n            </form>\n          </div>\n        ) : (\n          undefined\n        )} */}\n        {this.state.allBirdPoints.searchName ? (\n          <div>\n            <MapForThreads\n              searchName={this.state.allBirdPoints.searchName}\n              search={this.state.allBirdPoints.search}\n            />\n          </div>\n        ) : (\n          undefined\n        )}\n        {/* {<MapContainer allBirdPointsProps={this.state.allBirdPoints} />} */}\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport AuthService from \"../authentification/auth-service\";\nimport \"../navbar/Navbar.scss\";\n\nclass Navbar extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { loggedInUser: null };\n    this.service = new AuthService();\n  }\n\n  componentDidMount() {\n    this.setState({ ...this.state, loggedInUser: this.props.userInSession });\n  }\n  componentWillReceiveProps(nextProps) {\n    this.setState({ ...this.state, loggedInUser: nextProps[\"userInSession\"] });\n  }\n\n  logoutUser = () => {\n    this.service.logout().then(() => {\n      this.setState({ loggedInUser: null });\n      this.props.getUser(null);\n    });\n  };\n  render() {\n    return (\n      <nav /* className=\"nav\" */>\n        <ul className=\"nav justify-content-end\">\n          <li className=\"nav-item\">\n            <Link to=\"/\" style={{ textDecoration: \"none\", color: \"#F1F1F1\" }}>\n              Home\n            </Link>\n          </li>\n          <li className={this.state.loggedInUser ? \"hide\" : \"show\"} >\n            <Link\n              to=\"/login\"\n              style={{ textDecoration: \"none\", color: \"#F1F1F1\" }}\n            >\n              Log-in\n            </Link>\n          </li>\n          <li className={this.state.loggedInUser ? \"hide\" : \"show\"}>\n            <Link\n              to=\"/signup\"\n              style={{ textDecoration: \"none\", color: \"#F1F1F1\" }}\n            >\n              Sign-up\n            </Link>\n          </li>\n          <li className={this.state.loggedInUser ? \"show\" : \"hide\"}>\n            <Link\n              to=\"/profile\"\n              style={{ textDecoration: \"none\", color: \"#F1F1F1\" }}\n            >\n              Profile\n            </Link>\n          </li>\n          <li className={this.state.loggedInUser ? \"show\" : \"hide\"}>\n            <Link to=\"/\">\n              <button className=\"navButton\" onClick={() => this.logoutUser()}>Logout</button>\n            </Link>\n          </li>\n        </ul>\n      </nav>\n    );\n  }\n}\n\nexport default Navbar;\n\n{/* <ul class=\"nav justify-content-end\">\n  <li class=\"nav-item\">\n    <a class=\"nav-link active\" href=\"#\">Active</a>\n  </li>\n  <li class=\"nav-item\">\n    <a class=\"nav-link\" href=\"#\">Link</a>\n  </li>\n  <li class=\"nav-item\">\n    <a class=\"nav-link\" href=\"#\">Link</a>\n  </li>\n  <li class=\"nav-item\">\n    <a class=\"nav-link disabled\" href=\"#\" tabindex=\"-1\" aria-disabled=\"true\">Disabled</a>\n  </li>\n</ul> */}","import React, { Component } from \"react\";\nimport ForumService from \"./forum-service\";\n\nexport default class ThreadForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { title: \"\", content: \"\", searchName: \"\" };\n    this.service = new ForumService();\n  }\n\n  handleFormSubmit = event => {\n    event.preventDefault();\n    const title = this.state.title;\n    const searchName = this.state.searchName;\n    const content = this.state.content;\n    const creatorId = this.props.userInSession._id\n    // console.log(\"creatorId: \",creatorId)\n    this.service\n      .addNewThread(title, content, creatorId, searchName)\n      .then(() => {\n        this.setState({\n          title: \"\",\n          content: \"\",\n          searchName: \"\" \n        });\n      })\n      .catch(error => console.log(error));\n  };\n\n  handleChange = event => {\n    console.log(event.target);\n    const { name, value } = event.target;\n    this.setState({ [name]: value });\n    console.log(this.state);\n  };\n\n  render() {\n    return (\n      <div>\n        <h2>This is New Thread</h2>\n        <form onSubmit={this.handleFormSubmit}>\n          <label>Title:</label>\n          <input\n            type=\"text\"\n            name=\"title\"\n            value={this.state.title}\n            onChange={e => this.handleChange(e)}\n          />\n          <label>Search you want to show:</label>\n          <input\n            type=\"text\"\n            name=\"searchName\"\n            value={this.state.searchName}\n            onChange={e => this.handleChange(e)}\n          />\n          <label>Content:</label>\n          <textarea\n            name=\"content\"\n            value={this.state.content}\n            onChange={e => this.handleChange(e)}\n          />\n          <input type=\"submit\" value=\"Submit\" />\n        </form>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport ForumService from \"./forum-service\";\n\nexport default class ThreadListAll extends Component {\n  constructor() {\n    super();\n    this.state = { listOfThreads: [] };\n    this.service = new ForumService();\n  }\n\n  getList = () => {\n    this.service.getAllThreads().then(response => {\n      // console.log(\"response1 is: \", response)\n      console.log(\"response1 threads is: \", response.threads);\n      this.setState({\n        listOfThreads: response.threads\n      });\n      console.log(this.state.listOfThreads);\n    });\n  };\n\n  componentDidMount() {\n    this.getList();\n  }\n\n  render() {\n    return (\n      <div>\n        <h2>Have a look at our Threads</h2>\n        <div >\n          {this.state.listOfThreads.map((thread, idx) => {\n            return (\n              <div key={thread._id}>\n                <Link to={`/threads/${thread._id}`}>\n                  <h3>\n                    Thread {idx + 1}: {thread.title}\n                  </h3>\n                </Link>\n              </div>\n            );\n          })}\n        </div>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport ForumService from \"./forum-service\";\nimport \"./CommentForm.scss\";\n\nexport default class CommentForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { title: \"\", content: \"\", isShowing: false };\n    this.service = new ForumService();\n  }\n\n  handleFormSubmit = event => {\n    event.preventDefault();\n    const title = this.state.title;\n    const content = this.state.content;\n    const threadId = this.props.theThread._id;\n    const creatorId = this.props.loggedInUser._id;\n    this.service\n      .addNewComment(title, content, threadId, creatorId)\n      .then(() => {\n        this.props.getTheThread();\n        this.setState({ title: \"\", content: \"\", isShowing: false });\n      })\n      .catch(error => console.log(error));\n  };\n\n  handleChange = event => {\n    const { name, value } = event.target;\n    this.setState({ [name]: value });\n  };\n\n  toggleForm = () => {\n    if (!this.state.isShowing) {\n      this.setState({ isShowing: true });\n    } else {\n      this.setState({ isShowing: false });\n    }\n  };\n\n  showAddCommentForm = () => {\n    if (this.state.isShowing) {\n      return (\n        <div>\n          <form onSubmit={this.handleFormSubmit}>\n            <div className=\"form-group\">\n              <label>Title:</label>\n              <input\n                className=\"form-control\"\n                type=\"text\"\n                name=\"title\"\n                value={this.state.title}\n                onChange={e => this.handleChange(e)}\n              />\n            </div>\n            <div className=\"form-group\">\n              <label>Content:</label>\n              <textarea\n                className=\"form-control\"\n                name=\"content\"\n                value={this.state.content}\n                onChange={e => this.handleChange(e)}\n              />\n            </div>\n            <input type=\"submit\" value=\"Submit\" />\n          </form>\n        </div>\n      );\n    }\n  };\n\n  //   <form>\n  //   <div class=\"form-group\">\n  //     <label for=\"exampleFormControlInput1\">Email address</label>\n  //     <input type=\"email\" class=\"form-control\" id=\"exampleFormControlInput1\" placeholder=\"name@example.com\">\n  //   </div>\n  //   <div class=\"form-group\">\n  //     <label for=\"exampleFormControlSelect1\">Example select</label>\n  //     <select class=\"form-control\" id=\"exampleFormControlSelect1\">\n  //       <option>1</option>\n  //       <option>2</option>\n  //       <option>3</option>\n  //       <option>4</option>\n  //       <option>5</option>\n  //     </select>\n  //   </div>\n  //   <div class=\"form-group\">\n  //     <label for=\"exampleFormControlSelect2\">Example multiple select</label>\n  //     <select multiple class=\"form-control\" id=\"exampleFormControlSelect2\">\n  //       <option>1</option>\n  //       <option>2</option>\n  //       <option>3</option>\n  //       <option>4</option>\n  //       <option>5</option>\n  //     </select>\n  //   </div>\n  //   <div class=\"form-group\">\n  //     <label for=\"exampleFormControlTextarea1\">Example textarea</label>\n  //     <textarea class=\"form-control\" id=\"exampleFormControlTextarea1\" rows=\"3\"></textarea>\n  //   </div>\n  // </form>\n\n  render() {\n    return (\n      <div>\n        <button className=\"linkButton\" onClick={() => this.toggleForm()}>\n          Add comment\n        </button>\n        {this.showAddCommentForm()}\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport ForumService from \"./forum-service\";\n\nexport default class UserInfo extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n    this.service = new ForumService();\n  }\n\n  getUserInfo = () => {\n    const creatorId = this.props.creator;\n    this.service\n      .getUserInfo(creatorId)\n      .then(responseFromApi => {\n        // console.log(\"creatorId: \", creatorId);\n        // console.log(\"responseFromApi2: \", responseFromApi);\n        this.setState(responseFromApi);\n      })\n      .catch(err => {\n        console.log(err);\n      });\n  };\n\n  componentDidMount() {\n    this.getUserInfo();\n  }\n\n  render() {\n    return (\n      <div>\n        <img className=\"user-pic\" src={this.state.photoPath} alt=\"\" />\n        <p>{this.state.username}</p>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport ForumService from \"./forum-service\";\nimport UserInfo from \"./UserInfo\";\n\nexport default class CommentDetail extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n    this.service = new ForumService();\n  }\n\n  getTheComment = () => {\n    const commentId = this.props.commentId;\n    this.service\n      .getCommentDetail(commentId)\n      .then(responseFromApi => {\n        console.log(\"responseFromApi: \", responseFromApi);\n        this.setState(responseFromApi);\n      })\n      .catch(err => {\n        console.log(err);\n      });\n  };\n\n  componentDidMount() {\n    this.getTheComment();\n  }\n\n  render() {\n    return (\n      <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"col-3 userinfo\">\n            {this.state.creatorId ? (\n              <UserInfo creator={this.state.creatorId} />\n            ) : (\n              undefined\n            )}\n          </div>\n          <div className=\"col-9 text\">\n            <h5>{this.state.title}</h5>\n            <p>{this.state.content}</p>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport ForumService from \"./forum-service\";\nimport CommentForm from \"./CommentForm\";\nimport CommentDetail from \"./CommentDetail\";\nimport UserInfo from \"./UserInfo\";\nimport MapForThreads from \"../map/MapForThreads\";\nimport \"./ThreadDetails.scss\";\n\nexport default class ThreadDetails extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n    this.service = new ForumService();\n  }\n\n  componentWillReceiveProps() {\n    this.getSingleThread();\n  }\n\n  getSingleThread = () => {\n    // console.log(\"this.props.match: \", this.props.match);\n    const { params } = this.props.match; // to get id from URL\n    this.service\n      .getThreadDetails(params)\n      .then(response => {\n        this.setState(response);\n        console.log(\"response: \", response);\n        console.log(\"this.state: \", this.state);\n      })\n      .catch(err => {\n        console.log(err);\n      });\n  };\n\n  componentDidMount() {\n    this.getSingleThread();\n  }\n\n  renderAddCommentForm = () => {\n    if (this.props.userInSession) {\n      return (\n        <CommentForm\n          loggedInUser={this.props.userInSession}\n          theThread={this.state}\n          getTheThread={this.getSingleThread}\n        />\n      );\n    } else {\n      return (\n        <div className=\"green\">\n          <Link className=\"linkButton\" to={\"/login\"}>Please log in to make a comment</Link>\n        </div>\n      );\n    }\n  };\n\n  render() {\n    console.log(\"this.state: \", this.state);\n    // console.log(\"this.state.comments: \", this.state.comments);\n    // console.log(\"this.state.creatorId: \", this.state.creatorId);\n    // console.log(\"this is searchName: \", this.state.searchName);\n    return (\n      <div>\n        {/* <h2>This is ThreadDetails</h2> */}\n        <h3 className=\"threadTitle\">{this.state.title}</h3>\n        <div>\n          {this.state.searchName ? (\n            <div className=\"map\">\n              <MapForThreads searchName={this.state.searchName} />\n            </div>\n          ) : (\n            undefined\n          )}\n        </div>\n        {/* first constructor, second render, third componentDidMount, dann wegen stateWechsel wieder render. Da diese Daten aus dem componentDidMount kommen muss ich im render sicherstellen, dass creatorId schon vorhanden ist, bevor die Props gesendet werden. beim ersten render ist this.state.creatorId noch nicht da, also tritt im ternario undefined ein, was bedeutet, dass er gar nichts macht. beim zweiten render sind die Daten dann da und die Props werden geschickt. */}\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-3 userinfo\">\n              {this.state.creatorId ? (\n                <UserInfo creator={this.state.creatorId} />\n              ) : (\n                undefined\n              )}\n            </div>\n            <div className=\"col-9 text\">\n              <p>{this.state.content}</p>\n            </div>\n          </div>\n        </div>\n        {/* show the Comments heading only if there are comments */}\n        <div className=\"commentback\">\n          {this.state.comments && this.state.comments.length > 0 && (\n            <h4>Comments</h4>\n          )}\n          {this.state.comments &&\n            this.state.comments.map((comment, index) => {\n              return (\n                <div>\n                  <div key={index}>\n                    <CommentDetail commentId={comment} />\n                  </div>\n                </div>\n              );\n            })}\n          <div className=\"green\">\n          <p>{this.renderAddCommentForm()}</p>\n           </div>\n        </div>\n        <div className=\"red\">\n        <Link className=\"linkButton\" to={\"/threads\"}>Back to Forum</Link>\n        </div>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport Home from \"./components/home/Home\";\nimport { Switch, Route, Redirect } from \"react-router-dom\";\nimport Signup from \"./components/authentification/Signup\";\nimport Login from \"./components/authentification/Login\";\nimport Profile from \"./components/profile/Profile\";\nimport AuthService from \"./components/authentification/auth-service\";\nimport Mapbirds from \"./components/map/Mapbirds\";\nimport Navbar from \"./components/navbar/Navbar\";\nimport ThreadForm from \"./components/forum/ThreadForm\";\nimport ThreadListAll from \"./components/forum/ThreadListAll\";\nimport ThreadDetails from \"./components/forum/ThreadDetails\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { loggedInUser: null };\n    this.service = new AuthService();\n  }\n\n  fetchUser() {\n    if (this.state.loggedInUser === null) {\n      this.service\n        .loggedin() //checkt ob, eingeloggt?\n        .then(response => {\n          this.setState({\n            loggedInUser: response\n          });\n        })\n        .catch(err => {\n          this.setState({\n            loggedInUser: false\n          });\n        });\n    }\n  }\n\n  getTheUser = userObj => {\n    this.setState({\n      loggedInUser: userObj\n    });\n  };\n\n  render() {\n    this.fetchUser();\n    return (\n      <div className=\"App\">\n        <Navbar\n          getUser={this.getTheUser}\n          userInSession={this.state.loggedInUser}\n        />\n        <Switch>\n          <Route exact path=\"/mapbirds\" component={Mapbirds} />\n          {/* <Route exact path=\"/threads/:id\" component={ThreadDetails} /> */}\n          <Route\n            exact\n            path=\"/threads/:id\"\n            render={({match}) =>\n            this.state.loggedInUser ? (\n              <ThreadDetails userInSession={this.state.loggedInUser} match={match} />\n              ) : (\n                <ThreadDetails userInSession={this.state.loggedInUser} match={match} />\n                )\n              }\n          />\n              <Route exact path=\"/threads\" component={ThreadListAll} />\n\n          <Route exact path=\"/\" component={Home} />\n          <Route\n            exact\n            path=\"/profile\"\n            render={() =>\n              this.state.loggedInUser ? (\n                <Profile userInSession={this.state.loggedInUser} />\n              ) : (\n                <Profile userInSession={this.state.loggedInUser} />\n              )\n            }\n          />\n          <Route\n            exact\n            path=\"/threadform\"\n            render={() =>\n              this.state.loggedInUser ? (\n                <ThreadForm\n                  userInSession={this.state.loggedInUser}\n                />\n              ) : (\n                <ThreadForm\n                  userInSession={this.state.loggedInUser}\n                />\n              )\n            }\n          />\n          <Route\n            exact\n            path=\"/login\"\n            render={() =>\n              this.state.loggedInUser ? (\n                <Redirect to=\"/profile\" />\n              ) : (\n                <Login getUser={this.getTheUser} />\n              )\n            }\n          />\n          <Route\n            exact\n            path=\"/signup\"\n            render={() =>\n              this.state.loggedInUser ? (\n                <Redirect to=\"/profile\" />\n              ) : (\n                <Signup getUser={this.getTheUser} />\n              )\n            }\n          />\n        </Switch>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport \"bootstrap/dist/css/bootstrap.css\";\n\nReactDOM.render(\n  <Router>\n    <App />\n  </Router>,\n  document.getElementById(\"root\")\n);\nserviceWorker.unregister();\n"],"sourceRoot":""}